@model List<BiciSendas.Areas.Monitorizacion.Models.Sensores.SensorGridVM>
@using NonFactors.Mvc.Grid

@{
    @(Html
            .Grid(Model)
            .Id("gridSensores")
            .Build(columns =>
            {
                columns.Add(model => model.Identificador);
                columns.Add(model => model.TipoSensor);
                columns.Add(model => model.Estado).RenderedAs(model => "<span style='" + (model.IdEstadoSensor == 1 ? "color: green" : "color:red") + "'>" + model.Estado + "</span>").Encoded(false);
                columns.Add(model => model.Poblacion);
                columns.Add(model => model.Direccion);
                columns.Add(model => model.FechaModificacion).Formatted("{0:d}");
                columns.Add(model => "<button class='btnVer btn btn-secondary btn-sm fa-solid fa-solid fa-chart-column' data-id=\"" + model.Identificador + "\">").Encoded(false).Css("text-center").AsAttributes();
            })
            .Empty("No data found")
            .Pageable(pager =>
            {
                pager.PageSizes = new Dictionary<Int32, String> { { 0, "Todo" }, { 5, "5" }, { 10, "10" }, {20, "20"} };
                pager.ShowPageSizes = true;
                pager.PagesToDisplay = 5;
                pager.CurrentPage = 1;
                pager.RowsPerPage = 2;
            })
            .Sortable()
            .Css("css-classes") // Overwrites all classes with the new ones
            .AppendCss("table-hover") // Appends classes to the current ones
        )
}

